<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="assests/bootstrap-5.3.2-dist/css/budget.css">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <title>Expense Tracker</title>
</head>

<body>

    <div id="app">
        <h1 id="groupTitle">Expense Tracker</h1>
        <div id="hide">
            <label for="groupName">Enter Group Name:</label>
            <input type="text" id="groupName">
            <button onclick="setGroupName()">Set Group Name</button>
        </div>

        <div id="expenseInputs" style="display:none;">
            <label for="personCount">Enter the count of persons:</label>
            <input type="number" id="personCount" min="1">

            <button onclick="Names()">Generate Table</button>

            <div id="tableContainer"></div>
            <button onclick="saveExpenseToDatabase()">Done</button>
        </div>
        <div id="tableContainer2"></div>
        <canvas id="expenseChart" width="400" height="200"></canvas>


        <script>

            function renderBarGraph(expenseData) {
                const labels = expenseData.map(entry => entry.name);
                const amounts = expenseData.map(entry => entry.amount);

                const ctx = document.getElementById('expenseChart').getContext('2d');
                const myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Amount Spent',
                            data: amounts,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }


            async function setGroupName() {
                const groupNameInput = document.getElementById('groupName');
                const groupName = groupNameInput.value;

                if (groupName) {
                    // Display group name in h1 tag
                    document.getElementById('groupTitle').textContent = `Welcome  ${groupName}`;

                    // Hide group name input and show expense inputs
                    document.getElementById('hide').style.display = 'none';
                    document.getElementById('groupTitle').style.display = 'block'; // Display the updated group title
                    document.getElementById('expenseInputs').style.display = 'block';

                    // Send group name to the server
                    await fetch('/set-group-name', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ groupName })
                    });
                } else {
                    alert('Please enter a valid group name.');
                }

            }
        </script>
        <script>

            function updateTotal(index) {
                const amountInput = document.getElementById(`amount${index}`);
                const totalCell = document.getElementById(`total${index}`);

                const amount = parseFloat(amountInput.value) || 0;
                totalCell.textContent = amount.toFixed(2);
            }

            function Names() {
                const personCount = document.getElementById('personCount').value;
                const tableContainer = document.getElementById('tableContainer');

                // Validation
                if (!personCount || personCount < 1) {
                    alert('Please enter a valid person count.');
                    return;
                }

                // Create table
                let tableHTML = '<table>';
                tableHTML += '<tr><th>Name</th><th>Amount Spent</th><th>Total</th></tr>';



                for (let i = 1; i <= personCount; i++) {
                    tableHTML += `<tr>`;
                    tableHTML += `<td><input type="text" id="name${i}" placeholder="Person ${i}"></td>`;
                    tableHTML += `<td><input type="number" id="amount${i}" min="0" placeholder="0">
                    <button onclick="addAmount(${i})"><i class="fa-solid fa-plus"></i></button></td>`;
                    tableHTML += `<td id="total${i}">0</td>`;
                    tableHTML += `</tr>`;
                }

                tableHTML += `<tr><td colspan="3">
            <button onclick="calculateGrandTotal()">Total</button></td><td id="grandTotal">0</td></tr>`;
                tableHTML += '</table>';

                tableContainer.innerHTML = tableHTML;

                // Attach event listeners
                for (let i = 1; i <= personCount; i++) {
                    const amountInput = document.getElementById(`amount${i}`);
                    amountInput.addEventListener('input', () => updateTotal(i));
                }
            }



            function addAmount(index) {
                // Get the amount input and total cell for the specified person
                const amountInput = document.getElementById(`amount${index}`);
                const totalCell = document.getElementById(`total${index}`);

                // Get the current total for the specified person (or default to 0 if not a valid number)
                const currentTotal = parseFloat(totalCell.textContent) || 0;

                // Get the amount entered by the user (or default to 0 if not a valid number)
                const amount = parseFloat(amountInput.value) || 0;

                // Calculate the new total by adding the current total and the new amount
                const newTotal = currentTotal + amount;

                // Update the total cell for the specified person with the new total
                totalCell.textContent = newTotal.toFixed(2);

                // Set the amount input to zero for the specified person
                amountInput.value = "0";
            }
            function addAmount2(index) {
                // Get the amount input and total cell for the specified person
                const amountInput = document.getElementById(`amount2${index}`);
                const totalCell = document.getElementById(`total2${index}`);

                // Get the current total for the specified person (or default to 0 if not a valid number)
                const currentTotal = parseFloat(totalCell.textContent) || 0;

                // Get the amount entered by the user (or default to 0 if not a valid number)
                const amount = parseFloat(amountInput.value) || 0;

                // Calculate the new total by adding the current total and the new amount
                const newTotal = currentTotal + amount;

                // Update the total cell for the specified person with the new total
                totalCell.textContent = newTotal.toFixed(2);

                // Set the amount input to zero for the specified person
                amountInput.value = "0";
            }

            function calculateGrandTotal() {
                const personCount = document.getElementById('personCount').value;
                let grandTotal = 0;

                for (let i = 1; i <= personCount; i++) {
                    grandTotal += parseFloat(document.getElementById(`total${i}`).textContent) || 0;
                }

                document.getElementById('grandTotal').textContent = grandTotal.toFixed(2);
            }

        </script>

        <!-- Add this script tag in your HTML file -->
        <script>
            async function saveExpenseToDatabase() {
                const personCount = document.getElementById('personCount').value;
                const expenseData = [];
                document.getElementById('expenseInputs').style.display = 'none';
                const tableContainer2 = document.getElementById('tableContainer2');

                // Create table
                let tableHTML = '<table>';
                tableHTML += '<tr><th>Name</th><th>Amount Spent</th><th>Total</th></tr>';



                for (let i = 1; i <= personCount; i++) {
                    tableHTML += `<tr>`;
                    tableHTML += `<td><input type="text" id="name2${i}" placeholder="Person ${i}"></td>`;
                    tableHTML += `<td><input type="number" id="amount2${i}" min="0" placeholder="0">
                    <button onclick="addAmount2(${i})"><i class="fa-solid fa-plus"></i></button></td>`;
                    tableHTML += `<td id="total2${i}">0</td>`;
                    tableHTML += `</tr>`;
                }

                tableHTML += `<tr><td colspan="3">
            <button onclick="calculateGrandTotal2()">Total</button></td><td id="grandTotal">0</td></tr>`;
                tableHTML += '</table>';

                tableContainer2.innerHTML = tableHTML;

                // Attach event listeners
                for (let i = 1; i <= personCount; i++) {
                    const amountInput = document.getElementById(`amount2${i}`);
                    amountInput.addEventListener('input', () => updateTotal(i));
                }

                //

                for (let i = 1; i <= personCount; i++) {
                    const name = document.getElementById(`name2${i}`).value;
                    const amount = document.getElementById(`amount2${i}`).value;
                    if (name && amount && !isNaN(amount)) {
                        expenseData.push({ name, amount });
                    }




                    if (name && amount && !isNaN(amount)) {
                        // Send data to the server
                        await fetch('/save-expense', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },

                            body: JSON.stringify({ name, amount })
                        });
                    }
                    renderBarGraph(expenseData);
                }
                renderBarGraph(expenseData);

                alert('Data saved to the database!');
            }
        </script>
    </div>
</body>

</html>